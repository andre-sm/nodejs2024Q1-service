generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String @id @default(uuid())
  login       String
  password    String
  version     Int @default(1)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Artist {
  id        String @id @default(uuid())
  name      String
  grammy    Boolean
  albums    Album[]
  tracks    Track[]
  favorites FavoriteArtist[]
}

model Album {
  id         String @id @default(uuid())
  name       String
  year       Int
  artistId   String?
  artist     Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks     Track[]
  favorites  FavoriteAlbum[]
}

model Track {
  id         String @id @default(uuid())
  name       String
  artistId   String?
  artist     Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  albumId    String?
  album      Album? @relation(fields: [albumId], references: [id], onDelete: SetNull)
  duration   Int
  favorites  FavoriteTrack[]
}

model FavoriteArtist {
  id        String   @id @default(uuid())
  artist    Artist   @relation(fields: [artistId], references: [id], onDelete: Cascade)
  artistId  String   @unique
}

model FavoriteAlbum {
  id       String   @id @default(uuid())
  album    Album    @relation(fields: [albumId], references: [id], onDelete: Cascade)
  albumId  String   @unique
}

model FavoriteTrack {
  id       String   @id @default(uuid())
  track    Track    @relation(fields: [trackId], references: [id], onDelete: Cascade)
  trackId  String   @unique
}



